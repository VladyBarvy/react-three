import React, { useEffect, useState } from "react";
import axios from "axios";

// –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Adafruit IO
const ADAFRUIT_IO_USERNAME = "sergaybass";
const ADAFRUIT_IO_KEY = import.meta.env.VITE_ADAFRUIT_IO_KEY;

// –ò–º–µ–Ω–∞ —Ñ–∏–¥–æ–≤
const FEEDS = {
  temperature: "temperature",
  humidity: "humidity"
};

const AdafruitDataDisplay = () => {
  const [temperature, setTemperature] = useState(null);
  const [humidity, setHumidity] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const fetchData = async () => {
    setLoading(true);
    setError(null);

    try {
      // –ó–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∏–¥–æ–≤
      const [tempResponse, humResponse] = await Promise.all([
        axios.get(`https://io.adafruit.com/api/v2/${ADAFRUIT_IO_USERNAME}/feeds/${FEEDS.temperature}/data`, {
          headers: { "X-AIO-Key": ADAFRUIT_IO_KEY },
        }),
        axios.get(`https://io.adafruit.com/api/v2/${ADAFRUIT_IO_USERNAME}/feeds/${FEEDS.humidity}/data`, {
          headers: { "X-AIO-Key": ADAFRUIT_IO_KEY },
        }),
      ]);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–∏–¥–æ–≤
       setTemperature(tempResponse.data[0].value);
      
       setHumidity(humResponse.data[0].value);
       console.log(humResponse.data[0].value)
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(fetchData, 30000);
    return () => clearInterval(interval);
  }, []);

  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>;
  if (error) return <div>{error}</div>;

  return (
    <div style={{ fontFamily: "Arial, sans-serif", textAlign: "center" }}>
      <h1>–î–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤</h1>
      <p>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <strong>{temperature ? `${temperature} ¬∞C` : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}</strong></p>
      <p>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: <strong>{humidity ? `${humidity} %` : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}</strong></p>
    </div>
  );
};

export default AdafruitDataDisplay;
